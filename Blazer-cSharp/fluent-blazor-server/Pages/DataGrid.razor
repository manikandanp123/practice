@page "/datagrid"

<FluentDataGrid id="defaultGrid" RowsData=RowsGrid1 ColumnDefinitions=ColumnsGrid1 GridTemplateColumns="1fr 1fr" />
<br />
<FluentDataGrid id="defaultGrid2" RowsData=RowsGrid2 ColumnDefinitions=ColumnsGrid2 />

@code {
    public class SampleGrid1Data
    {
        public string Name { get; set; }
        public int Age { get; set; }

        public SampleGrid1Data(string name, int age)
        {
            Name = name;
            Age = age;
        }
    }
    public record SampleGrid2Data(string Category, string Topic, string Action, string a);
    
    public List<ColumnDefinition<SampleGrid1Data>> ColumnsGrid1 = new();
    public List<ColumnDefinition<SampleGrid2Data>> ColumnsGrid2 = new();

    List<SampleGrid1Data> RowsGrid1 = new()
    {
        new SampleGrid1Data("Rob", 19 ),
        new SampleGrid1Data("Bob", 20 )
    };

    List<SampleGrid2Data> RowsGrid2 = new()
    {
        new SampleGrid2Data("BlockChain", "3", "10", "Add Acton" ),
        new SampleGrid2Data("Cryto Currencies", "3", "10", "Add Action" ),
        new SampleGrid2Data("Renewable Energy", "3", "10", "Add Action" ),
        new SampleGrid2Data("BlockChain", "3", "10", "Add Acton" ),
        new SampleGrid2Data("value 1-2", "value 2-2", "value 3-2", "value 4-2" ),
        new SampleGrid2Data("value 1-3", "value 2-3", "value 3-3", "value 4-3" ),
        new SampleGrid2Data("value 1-4", "value 2-4", "value 3-4", "value 4-4" )

    };
    
    protected override void OnInitialized()
    {
        ColumnsGrid1.Add(new ColumnDefinition<SampleGrid1Data>("Name", x => x.Name));
        ColumnsGrid1.Add(new ColumnDefinition<SampleGrid1Data>("Age", x => x.Age));

        ColumnsGrid2.Add(new ColumnDefinition<SampleGrid2Data>("Item 1", x => x.Category));
        ColumnsGrid2.Add(new ColumnDefinition<SampleGrid2Data>("Item 2", x => x.Topic));
        ColumnsGrid2.Add(new ColumnDefinition<SampleGrid2Data>("Item 3", x => x.Action));
        ColumnsGrid2.Add(new ColumnDefinition<SampleGrid2Data>("Item 4", x => x.a));

        base.OnInitialized();
    }
}
